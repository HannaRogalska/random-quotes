(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const s of t.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&c(s)}).observe(document,{childList:!0,subtree:!0});function n(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function c(e){if(e.ep)return;e.ep=!0;const t=n(e);fetch(e.href,t)}})();const i=document.getElementById("quoteText"),u=document.getElementById("loadQuoteBtn");if(!i||!u)throw new Error("Elements not found");const l=async()=>{try{const r=await fetch("https://quoteslate.vercel.app/api/quotes/random");if(!r.ok)throw new Error("Network response was not ok");const n=await r.json();if(n===null)throw new Error("No data received");i.textContent=`${n.quote} - ${n.author}`}catch(o){console.log("Error fetching quote:",o)}};u.addEventListener("click",o=>{o.preventDefault(),l()});
